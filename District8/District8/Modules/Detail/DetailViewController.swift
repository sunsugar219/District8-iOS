//
//  DetailViewController.swift
//  District8
//
//  Created by Hodi Zsuzsa on 2021. 07. 29..
//  Copyright (c) 2021. ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import WebKit
import youtube_ios_player_helper_swift

final class DetailViewController: BaseViewController {

    // MARK: - Public properties -

    var presenter: DetailPresenterInterface!
    
    private var scrollView: UIScrollView!
    private var mainImageView: UIImageView!
    private var placeTag: Tag!
    private var titleLabel: UILabel!
    private var subtitleLabel: UILabel!
    private var bodyLabel: UILabel!
    private var imagesStackView: UIStackView!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        NotificationCenter.default.addObserver(self, selector: #selector(textsizeChanged), name: Constants.Notifications.TextSizeChanged, object: nil)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        initNavbar()
    }
    
    @objc
    private func textsizeChanged() {
        guard bodyLabel != nil else { return }
        switch UserDefaults.standard.string(forKey: Constants.UserDefaults.TextSize) {
        case "Small".localized:
            bodyLabel.font = Fonts.Body2(size: 12)
        case "Normal".localized:
            bodyLabel.font = Fonts.Body2(size: 15)
        case "Big".localized:
            bodyLabel.font = Fonts.Body2(size: 17)
        case "Bigger".localized:
        bodyLabel.font = Fonts.Body2(size: 19)
        default:
            bodyLabel.font = Fonts.Body2()
        }
    }
    private func setup() {
        initScrollView()
        initMainImageView()
        initPlaceTag()
        initTitleLabel()
        initSubtitleLabel()
        initBodyLabel()
        initImagesStackView()
    }
    
    private func initScrollView() {
        scrollView = UIScrollView()
        scrollView.showsHorizontalScrollIndicator = false
        scrollView.showsVerticalScrollIndicator = false
        view.addSubview(scrollView)
        
        scrollView.snp.makeConstraints { make in
            make.top.equalTo(view.snp.top)
            make.leading.trailing.bottom.equalToSuperview()
        }
    }
    
    private func initMainImageView() {
        mainImageView = UIImageView()
        mainImageView.contentMode = .scaleAspectFit
        if let img = presenter.getImageUrl() {
            mainImageView.downloaded(from: img)
        }
        scrollView.addSubview(mainImageView)
        mainImageView.snp.makeConstraints { make in
            make.top.leading.centerX.equalToSuperview()
        }
    }
    
    private func initPlaceTag() {
        placeTag = Tag()
        placeTag.text = presenter.getPlace()
        
        scrollView.addSubview(placeTag)
        placeTag.snp.makeConstraints { make in
            make.leading.equalToSuperview().offset(16.0.screenScaled)
            make.top.equalTo(mainImageView.snp.bottom).offset(16.0.screenScaled)
        }
    }
    
    private func initTitleLabel() {
        titleLabel = UILabel()
        titleLabel.font = Fonts.Headline()
        titleLabel.textColor = UIColor(named: "Black")
        titleLabel.numberOfLines = 2
        titleLabel.lineBreakMode = .byTruncatingTail
        titleLabel.text = presenter.getTitle()
        
        scrollView.addSubview(titleLabel)
        titleLabel.snp.makeConstraints { make in
            make.leading.equalToSuperview().offset(16.0.screenScaled)
            make.top.equalTo(placeTag.snp.bottom).offset(16.0.screenScaled)
            make.centerX.equalToSuperview()
        }
    }
    
    private func initSubtitleLabel() {
        subtitleLabel = UILabel()
        subtitleLabel.font = Fonts.Caption2()
        subtitleLabel.textColor = UIColor(named: "DarkGrey")
        subtitleLabel.numberOfLines = 2
        subtitleLabel.lineBreakMode = .byTruncatingTail
        subtitleLabel.text = presenter.getSubTitle()
        
        scrollView.addSubview(subtitleLabel)
        subtitleLabel.snp.makeConstraints { make in
            make.top.equalTo(titleLabel.snp.bottom).offset(4.0.screenScaled)
            make.leading.equalToSuperview().offset(16.0.screenScaled)
            make.centerX.equalToSuperview()
        }
        
    }
    
    private func initBodyLabel() {
        bodyLabel = UILabel()
        switch UserDefaults.standard.string(forKey: Constants.UserDefaults.TextSize) {
        case "Small".localized:
            bodyLabel.font = Fonts.Body2(size: 12)
        case "Normal".localized:
            bodyLabel.font = Fonts.Body2(size: 15)
        case "Big".localized:
            bodyLabel.font = Fonts.Body2(size: 17)
        case "Bigger".localized:
        bodyLabel.font = Fonts.Body2(size: 19)
        default:
            bodyLabel.font = Fonts.Body2()
        }
        bodyLabel.textColor = UIColor(named: "Black")
        bodyLabel.text = presenter.getBodyText()
        bodyLabel.numberOfLines = 0
        
        scrollView.addSubview(bodyLabel)
        bodyLabel.snp.makeConstraints { make in
            make.top.equalTo(subtitleLabel.snp.bottom).offset(16.0.screenScaled)
            make.leading.equalToSuperview().offset(16.0.screenScaled)
            make.centerX.equalToSuperview()
        }
    }
    
    private func initImagesStackView() {
        imagesStackView = UIStackView()
        imagesStackView.axis = .vertical
        imagesStackView.distribution = .fillEqually
        
        for img in presenter.getMedia() {
            if let img = img, img.contains("youtube") {
                let videoId = String(img.split(separator: "/").last!)
                var view = YTPlayerView()
                view.load(videoId: videoId)
                
                imagesStackView.addArrangedSubview(view)
            } else {
                let view = UIImageView()
                view.contentMode = .scaleAspectFit
                view.downloaded(from: img ?? "")
                
                imagesStackView.addArrangedSubview(view)
            }
        }
        
        let oneHeight = ((UIScreen.main.bounds.width)*2/3)+16
        let fullheight = oneHeight * CGFloat(presenter.getMedia().count)
        scrollView.addSubview(imagesStackView)
        imagesStackView.snp.makeConstraints { make in
            make.top.equalTo(bodyLabel.snp.bottom).offset(16.0.screenScaled)
            make.leading.centerX.bottom.equalToSuperview()
            make.height.equalTo(fullheight)
        }
    }
    
    private func initNavbar() {
        let sizeImage = UIImage(named: "ic_text_size")!
        let shareImage = UIImage(named: "ic_share")!
        let backImage = UIImage(named: "ic_chevron_left")!
        
        let sizeButton   = UIBarButtonItem(image: sizeImage,  style: .plain, target: self, action: #selector(didTapSizeButton(sender:)))
        let shareButton = UIBarButtonItem(image: shareImage,  style: .plain, target: self, action: #selector(didTapShareButton(sender:)))
        
        navigationItem.rightBarButtonItems = [shareButton, sizeButton]
        
        let backButton = UIBarButtonItem(image: backImage,  style: .plain, target: self, action: #selector(didTapBackButton(sender:)))
        navigationItem.leftBarButtonItems = [backButton]
        
        let titleImage = UIImage(named: "")
        navigationItem.titleView = UIImageView(image: titleImage)
    }
    @objc
    private func didTapSizeButton(sender: AnyObject){
        presenter.sizeTapped()
    }
    
    @objc
    private func didTapShareButton(sender: AnyObject){
        
    }
    
    @objc
    private func didTapBackButton(sender: AnyObject){
        presenter.backTapped()
    }

}

// MARK: - Extensions -

extension DetailViewController: DetailViewInterface {
}
extension DetailViewController: WKUIDelegate, WKNavigationDelegate {
    
}
